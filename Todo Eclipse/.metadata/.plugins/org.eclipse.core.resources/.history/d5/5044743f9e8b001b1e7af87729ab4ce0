package dao;

public class SqlQueryUtils {

	
	private static final String query1 = "SELECT  task_id_table.task_id, task_name, description, date_added, task_status, important_status, "+
										 "flagged_status, due_date, repeat_status, remainder_date, subtask_list, category_list "+
										 "FROM task_id_table INNER JOIN tasks_table ON "+
										 "(task_id_table.user_id = ? AND task_id_table.task_id = tasks_table.task_id) "+
										 "LEFT JOIN task_dates ON "+
										 "(task_dates.task_id = task_id_table.task_id) "+
										 "LEFT JOIN subtasks_table ON "+
										 "(subtasks_table.task_id = task_id_table.task_id) "+
										 "LEFT JOIN category_table ON "+
										 "(category_table.task_id = task_id_table.task_id) "+
										 "ORDER BY task_name ASC;";
	
	private static final String query2 = "SELECT  task_id_table.task_id, task_name, description, date_added, task_status, important_status, "+
										 "flagged_status, due_date, repeat_status, remainder_date, subtask_list, category_list "+
										 "FROM task_id_table INNER JOIN tasks_table ON "+
										 "(task_id_table.user_id = ? AND task_id_table.task_id = tasks_table.task_id AND tasks_table.important_status=1) "+
										 "LEFT JOIN task_dates ON "+
										 "(task_dates.task_id = task_id_table.task_id) "+
										 "LEFT JOIN subtasks_table ON "+
										 "(subtasks_table.task_id = task_id_table.task_id) "+
										 "LEFT JOIN category_table ON "+
										 "(category_table.task_id = task_id_table.task_id) "+
										 "ORDER BY task_name ASC;";
	
	private static final String query3 = "SELECT  task_id_table.task_id, task_name, description, date_added, task_status, important_status, "+
										 "flagged_status, due_date, repeat_status, remainder_date, subtask_list, category_list "+
										 "FROM task_id_table INNER JOIN tasks_table ON "+
										 "(task_id_table.user_id = ? AND task_id_table.task_id = tasks_table.task_id AND tasks_table.flagged_status=1) "+
										 "LEFT JOIN task_dates ON "+
										 "(task_dates.task_id = task_id_table.task_id) "+
										 "LEFT JOIN subtasks_table ON "+
										 "(subtasks_table.task_id = task_id_table.task_id) "+
										 "LEFT JOIN category_table ON "+
										 "(category_table.task_id = task_id_table.task_id) "+
										 "ORDER BY task_name ASC;";
	
	private static final String query4 = "SELECT  task_id_table.task_id, task_name, description, date_added, task_status, important_status, "+
										 "flagged_status, due_date, repeat_status, remainder_date, subtask_list, category_list "+
										 "FROM task_id_table INNER JOIN tasks_table ON "+
										 "(task_id_table.user_id = ? AND task_id_table.task_id = tasks_table.task_id) "+
										 "INNER JOIN task_dates ON "+
										 "(task_dates.task_id = task_id_table.task_id) "+
										 "LEFT JOIN subtasks_table ON "+
										 "(subtasks_table.task_id = task_id_table.task_id) "+
										 "LEFT JOIN category_table ON "+
										 "(category_table.task_id = task_id_table.task_id) "+
										 "ORDER BY task_name ASC;";
	
	private static final String query5 = "SELECT  task_id_table.task_id, task_name, description, date_added, task_status, important_status, "+
										 "flagged_status, due_date, repeat_status, remainder_date, subtask_list, category_list "+
										 "FROM task_id_table INNER JOIN tasks_table ON "+
										 "(task_id_table.user_id = ? AND task_id_table.task_id = tasks_table.task_id) "+
										 "INNER JOIN task_dates ON "+
										 "(task_dates.task_id = task_id_table.task_id AND task_dates.task_id IN "+
										 "(SELECT task_dates.task_id FROM task_dates WHERE "+
										 "DATEDIFF( CURDATE(), remainder_date)>0 OR "+
										 "DATEDIFF( CURDATE(), due_date)>0)) "+
										 "LEFT JOIN subtasks_table ON "+
										 "(subtasks_table.task_id = task_id_table.task_id) "+
										 "LEFT JOIN category_table ON "+
										 "(category_table.task_id = task_id_table.task_id) "+
										 "ORDER BY task_name ASC;";

	public static String getQuery1(String sortColumn, String sortType, String searchString, int pageId) {
		
		String returnQuery=null, importantCon="", flaggedCon="", plannedCon="LEFT JOIN", attentionCon="";
		
		if(pageId == 1) {
			importantCon = "AND tasks_table.important_status=1";
		}else if(pageId == 2) {
			flaggedCon = "AND tasks_table.flagged_status=1";
		}else if(pageId == 3) {
			plannedCon = "INNER JOIN";
		}else if(pageId == 4) {
			attentionCon = "AND task_dates.task_id IN (SELECT task_dates.task_id FROM task_dates WHERE DATEDIFF( CURDATE(), remainder_date)>0 OR DATEDIFF( CURDATE(), due_date)>0))";
		}
		
		try {
			returnQuery = "SELECT  task_id_table.task_id, task_name, description, date_added, task_status, important_status, "+
						  "flagged_status, due_date, repeat_status, remainder_date, subtask_list, category_list "+
						  "FROM task_id_table INNER JOIN tasks_table ON "+
						  "(task_id_table.user_id = ? AND task_id_table.task_id = tasks_table.task_id AND task_name LIKE '%"+searchString+"%' "
						  +flaggedCon+importantCon+") "
						  +plannedCon+" task_dates ON "+
						  "(task_dates.task_id = task_id_table.task_id) "+
						  "LEFT JOIN subtasks_table ON "+
						  "(subtasks_table.task_id = task_id_table.task_id) "+
						  "LEFT JOIN category_table ON "+
						  "(category_table.task_id = task_id_table.task_id) "+
						  "ORDER BY "+sortColumn+" "+sortType+" ;";
		}catch(Exception e) {
			e.printStackTrace();
		}
		return returnQuery;
	}

	public static String getQuery2() {
		return query2;
	}

	public static String getQuery3() {
		return query3;
	}

	public static String getQuery4() {
		return query4;
	}

	public static String getQuery5() {
		return query5;
	}
	
}
